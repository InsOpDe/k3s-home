---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: jellyfin
  namespace: media
spec:
  interval: 10m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: jellyfin
      version: 9.2.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    service:
      main:
        ports:
          - port: 1900             # < port to open on the outside on the server
            targetPort: 1900       # < targetport. port on the pod to passthrough
            name: dlna-udp         # < reference name for the port in the deployment yaml
            protocol: UDP
          - port: 7359
            targetPort: 7359
            name: discovery-udp
            protocol: UDP
          - port: 8096             # < port to open on the outside on the server
            targetPort: 8096       # < targetport. port on the pod to passthrough
            name: http-tcp         # < reference name for the port in the deployment yaml
            protocol: TCP
          - port: 8920
            targetPort: 8920
            name: https-tcp
        enabled: true
        type: LoadBalancer
        loadBalancerIP: 192.168.178.222
        externalTrafficPolicy: Local
        annotations:
          metallb.universe.tf/allow-shared-ip: jellyfin
    image:
      repository: jellyfin/jellyfin
      tag: 10.7.7
      imagePullPolicy: IfNotPresent
    env:
      TZ: "Europe/Berlin"
      JELLYFIN_CACHE_DIR: /config/cache
    podSecurityContext:
      supplementalGroups:
        - 44
        - 109
        - 568
    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
#          external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
          cert-manager.io/cluster-issuer: letsencrypt-production
          hajimari.io/enable: "true"
          hajimari.io/icon: play
        hosts:
          - host: "jellyfin.${SECRET_DOMAIN}"
            paths:
              - path: "/"
                pathType: Prefix
          - host: "jellyfin-server.${SECRET_DOMAIN}"
            paths:
              - path: "/"
                backend:
                  serviceName: jellyfin
                  servicePort: 8096
                pathType: Prefix
        tls:
          - hosts:
              - "jellyfin.${SECRET_DOMAIN}"
            secretName: jellyfin-tls
    persistence:
      config:
        enabled: true
      transcode:
        enabled: true
        type: emptyDir
        medium: Memory
      media:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDR}"
            path: /volume1/media
        mountPath: /media
        readOnly: true
    podAnnotations:
      backup.velero.io/backup-volumes: config
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/config"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/config"]'
#    additionalContainers:
#      fsfreeze:
#        name: fsfreeze
#        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
#        volumeMounts:
#          - name: config
#            mountPath: /config
#        securityContext:
#          privileged: true
    tolerations:
      - key: "kind"
        operator: "Equal"
        value: "vm"
        effect: "NoSchedule"
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
            - matchExpressions:
                - key: "kind"
                  operator: "In"
                  values:
                    - "vm"
    resources:
      requests:
        #        gpu.intel.com/i915: 1
        cpu: 500m
        memory: 500Mi
      limits:
        #        gpu.intel.com/i915: 1
#        cpu: 1000m
#        memory: 2000Mi
